# User Input
$ServiceNowUrl = Read-Host -Prompt 'Enter the ServiceNow URL'
$Username = Read-Host -Prompt 'Enter your ServiceNow username'
$Password = Read-Host -Prompt 'Enter your ServiceNow password' -AsSecureString
$CSVPath = Read-Host -Prompt 'Enter the full path to the CSV file'
$LogPath = Read-Host -Prompt 'Enter the full path where the log file will be saved'

# Convert secure password to plain text (WARNING: handle with care)
$BSTR = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($Password)
$Password = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($BSTR)

# Read CSV File
$records = Import-Csv -Path $CSVPath

# Initialize log
Set-Content -Path $LogPath -Value "TargetRecord_sysID, FilePath, NewLocation, StatusCode, Response`r`n"

foreach ($record in $records) {
    # Prepare multipart/form-data boundary
    $boundary = [System.Guid]::NewGuid().ToString()
    $LF = "`r`n"

    # Prepare file content
    $fileContent = Get-Content -Path $record.FilePath -Encoding Byte
    $fileHeader = "--$boundary$LF" +
                  "Content-Disposition: form-data; name=`"uploadFile`"; filename=`"$(Split-Path $record.FilePath -Leaf)`"$LF" +
                  "Content-Type: application/octet-stream$LF$LF"

    $fileFooter = "$LF--$boundary--$LF"

    # Prepare body
    $body = [System.Text.Encoding]::ASCII.GetBytes($fileHeader) + $fileContent + [System.Text.Encoding]::ASCII.GetBytes($fileFooter)

    # Create headers
    $headers = @{
        "Authorization" = "Basic " + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$Username:$Password"))
        "Content-Type" = "multipart/form-data; boundary=$boundary"
    }

    try {
        # Make API call
        $response = Invoke-RestMethod -Uri "$ServiceNowUrl/api/now/attachment/upload" -Method Post -Headers $headers -Body $body

        # Parse response
        $newLocation = $response.result.sys_id
        $statusCode = 200
        $responseBody = $response | ConvertTo-Json

    } catch {
        $newLocation = "Error"
        $statusCode = $_.Exception.Response.StatusCode.Value__
        $responseBody = $_.Exception.Message
    }

    # Write log
    Add-Content -Path $LogPath -Value "$($record.TargetRecord_sysID), $($record.FilePath), $newLocation, $statusCode, $responseBody"
}
